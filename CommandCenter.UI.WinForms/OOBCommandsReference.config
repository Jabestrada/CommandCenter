<?xml version="1.0" encoding="utf-8" ?>
<commandCenter>
  <!-- 
  You can define a token once and then reference that token anywhere the token value is used in the configuration file.
  No hard rules on how to define tokens but make sure they are unique enough
  -->
  <tokens>
    <token key="[BACKUPDIR]" value="C:\mybackupDirectory"/>
    <token key="[AppPool]" value="EnterIisAppPoolHere"/>
    <token key="[FileDeleteCommand]" value="CommandCenter.Commands, CommandCenter.Commands.FileSystem.FileDeleteCommand" />
    <token key="[MultiFileRenameCommand]" value="CommandCenter.Commands, CommandCenter.Commands.FileSystem.MultiFileRenameWithPatternCommand" />
  </tokens>
  <commands>
    <!-- 
    1. ctorArg name attribute values can be anything  as long as they are unique within their parent ctorArgs node 
    2. ctorArg ordering must be maintained since they are passed as constructor arguments to the Command
    -->
    <command>
      <typeName>CommandCenter.Commands,  CommandCenter.Commands.WinForms.ConditionalPauseCommand</typeName>
      <shortDescription>Conditional pause 1</shortDescription>
      <ctorArgs>
        <ctorArg name='line1' value='This is a test.'/>
        <ctorArg name='line2' value='Shall we proceed?' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileSystem.RenameFilesInDirectoryWithPatternCommand</typeName>
      <shortDescription>Rename files in directory using pattern</shortDescription>
      <ctorArgs>
        <!-- 
          pattern tokens:
          [n] => filename without extension
          [e] => file extension including dot .
          [d:<format>] => datetime format specifiers where <format> can be any values valid for DateTime.ToString("<format>")
        -->
        <ctorArg name='pattern' value='jabe-[n]-[d:yyyyMMdd]-[d:hhmm][e]' />
        <ctorArg name='source1' value='C:\TestDirectory\SourceDir1' />
        <ctorArg name='source2' value='C:\AnotherTestDirectory\SourceDir2' />
      </ctorArgs>
    </command>
    <command>
      <typeName>[MultiFileRenameCommand]</typeName>
      <shortDescription>Multi-file rename test</shortDescription>
      <ctorArgs>
        <ctorArg name='pattern' value='anyLiteralHere-[n]-[d:yyyyMMdd]-[d:hhmm][e]' />
        <ctorArg name='source1' value='C:\File1.txt' />
        <ctorArg name='source2' value='C:\File2.txt' />
        <ctorArg name='source3' value='C:\File3.txt' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.Svn.SvnUpdateCommand</typeName>
      <shortDescription>Update staging folder with latest source code versions</shortDescription>
      <ctorArgs>
        <ctorArg name='svnExe' value='C:\Program Files\TortoiseSVN\bin\svn.exe' />
        <ctorArg name='directoryToUpdate' value='C:\FullLocalPathToRepo' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileSystem.DirectoryDeleteContentsOnlyCommand</typeName>
      <shortDescription>Delete contents of Publish folder</shortDescription>
      <ctorArgs>
        <ctorArg name='targetDir' value='C:\TestPublishFolder' />
        <ctorArg name='backupDir' value='[BACKUPDIR]' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.MsBuild.MsCleanRebuildCommand</typeName>
      <shortDescription>Clean and rebuild solution</shortDescription>
      <ctorArgs>
        <ctorArg name='exe' value='C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MsBuild.exe' />
        <ctorArg name='solution' value='C:\MySolution.sln' />
        <ctorArg name='configuration' value='Release' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.MsBuild.MsPublishWebAppCommand</typeName>
      <shortDescription>Publish web app</shortDescription>
      <ctorArgs>
        <ctorArg name='exe' value='C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MsBuild.exe' />
        <ctorArg name='project' value='C:\MyProject.csproj' />
        <ctorArg name='configuration' value='Release' />
        <ctorArg name='publishProfile' value='FolderProfile.pubxml' />
      </ctorArgs>
    </command>
    <command>
      <typeName>[FileDeleteCommand]</typeName>
      <shortDescription>Delete .config files from Publish folder</shortDescription>
      <ctorArgs>
        <ctorArg name='file' value='C:\fileToDelete.txt' />
        <ctorArg name='backupDir' value='[BACKUPDIR]' />
      </ctorArgs>
    </command>
    <command>
      <typeName>[FileDeleteCommand]</typeName>
      <shortDescription>Delete target zip file</shortDescription>
      <ctorArgs>
        <ctorArg name='file' value='C:\anotherFileToDelete.txt' />
        <ctorArg name='backupDir' value='[BACKUPDIR]' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileZip.Zip7CompressCommand</typeName>
      <shortDescription>Zip publish folder</shortDescription>
      <ctorArgs>
        <ctorArg name='exe' value='C:\Program Files\7-Zip\7z.exe' />
        <ctorArg name='targetZip' value='[BACKUPDIR]\MyZip.7z' />
        <ctorArg name='source1' value='C:\MySourceFolder1' />
        <ctorArg name='source2' value='C:\MySourceFolder2' />
        <ctorArg name='source3' value='C:\SourceCanBeFileToo.txt' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileSystem.FileCopyCommand</typeName>
      <shortDescription>Copy .configs from live apps to staging apps</shortDescription>
      <ctorArgs>
        <ctorArg name='source' value='C:\sourceFile.txt' />
        <ctorArg name='target' value='C:\MyCopies\sourceFile.txt' />
        <ctorArg name='backupDir' value='[BACKUPDIR]' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.Iis.IisAppPoolStopCommand</typeName>
      <shortDescription>Stop IIS app pool; requires admin privileges</shortDescription>
      <ctorArgs>
        <ctorArg name='appCmd' value='C:\Windows\System32\inetsrv\appcmd.exe' />
        <ctorArg name='appPoolName' value='[AppPool]' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileSystem.DirectoryDeleteContentsOnlyCommand</typeName>
      <shortDescription>Delete contents of live apps</shortDescription>
      <ctorArgs>
        <ctorArg name='dir' value='C:\DirectoryToDeleteContentsFor' />
        <ctorArg name='backupDir' value='C:\MyBackupFolder' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.FileSystem.DirectoryCopyContentsCommand</typeName>
      <shortDescription>Copy contents of staging to live dirs</shortDescription>
      <ctorArgs>
        <ctorArg name='sourceDirectory' value='C:\DirectoryToCopyContentsFor' />
        <ctorArg name='destinationDirectory' value='C:\TargetDirectoryOfCopy' />
      </ctorArgs>
    </command>
    <command>
      <typeName>CommandCenter.Commands, CommandCenter.Commands.Iis.IisAppPoolStartCommand</typeName>
      <shortDescription>Start IIS app pool; requires admin privileges</shortDescription>
      <ctorArgs>
        <ctorArg name='appCmd' value='C:\Windows\System32\inetsrv\appcmd.exe' />
        <ctorArg name='appPoolName' value='[AppPool]' />
      </ctorArgs>
    </command>
  </commands>
</commandCenter>